@startuml

class Usuario <<@Entity>> {
    - <u>SERIAL_VERSION_UUID</u>: Long = 1L
    ..
    - id: Long
    ..
    - nomeUsuario: String
    - senha: String
    - email: String
    ..
    - Set<Roles> roles = new HashSet<>()
    ..
    + Collection<? extends GrantedAuthority> getAuthorities()
    + String getPassword()
    + String getUsername()
    + boolean isAccountNonExpired()
    + boolean isAccountNonLocked()
    + boolean isCredentialsNonExpired()
    + boolean isEnabled()
    ..
    + void addRole(Roles role)
    + void removeRole(Roles role)
    + void hasRole(Roles role)
    ..
    + void setUserName(String nomeUsuario)
    + void setEmail(String email)
    + void setRoles(Set<Roles> roles)
    ..
    + boolean equals(Object o)
    + int hashCode()
    + String toString()
}

abstract class Pessoa <<MappedSuperclass>> {
    - <u>SERIAL_VERSION_UUID</u>: Long = 1L
    ..
    - nomeCompleto: String
    - cpf: String
    - rg: String
    - genero: String
    - dataNascimento: LocalDate
    - telefoneCelular: String
    - telefoneFixo: String
    - endereco: Endereco
    - estrangeiro: boolean
    ..
    + boolean equals(Object o)
    + int hashCode()
    + String toString()
}

class Roles {
    - <u>SERIAL_VERSION_UUID</u>: Long = 1L
    ..
    - id: Long
    - autoridade: String
}

class Administrador extends Pessoa {
    - <u>SERIAL_VERSION_UUID</u>: Long = 1L
    ..
    + addRole(Roles role)
    + removeRole(Roles role)
    + hasRole(Roles role)
    ..
    + boolean equals(Object o)
    + int hashCode()
    + String toString()
}



@enduml